{#
	Argon is a clean HTML5 theme for LuCI. It is based on luci-theme-bootstrap and MUI and Argon Template

	luci-theme-argon
	Copyright 2020 Jerryk <jerrykuku@gmail.com>

	Have a bug? Please create an issue here on GitHub!
	https://github.com/jerrykuku/luci-theme-argon/issues

	luci-theme-bootstrap:
	Copyright 2008 Steven Barth <steven@midlink.org>
	Copyright 2008-2016 Jo-Philipp Wich <jow@openwrt.org>
	Copyright 2012 David Menting <david@nut-bolt.nl>

	MUI:
	https://github.com/muicss/mui

	Argon Theme
	https://demos.creative-tim.com/argon-dashboard/index.html

	Licensed to the public under the Apache License 2.0
-#}

{% include("themes/" + theme + "/out_header_login") %}
{%
	import * as fs from 'fs';
	import { cursor } from 'uci';
	import { rand } from 'math';

	let cfg = cursor();

	//Fetch Local Background Media

	const imageTypes = " jpg jpeg png gif webp ";
	const videoTypes = " mp4 webm ";
	const allTypes = imageTypes + videoTypes;

	function fetchMedia(path, themeDir) {
		let backgroundTable = [];
		for (f in (fs.lsdir(path))) {
			let ext = lc(split(f, '.')?.[1]);
			if (ext && index(allTypes, " " + ext + " ") != -1) {
				let bg = {};
				bg.type = ext;
				bg.url = themeDir + f;
				push(backgroundTable, bg);
			}
		}
		return backgroundTable;
	}

	function selectBackground(themeDir) {
		let bgUrl = media + "/img/bg1.jpg";
		let backgroundType = "Image";
		let mimeType = "";

		if (fs.access("/etc/config/argon")) {
			let online_wallpaper = cfg.get_first('argon', 'global', 'online_wallpaper') ?? (cfg.get_first('argon', 'global', 'bing_background') == '1' ? 'bing' : null);
			if (online_wallpaper && online_wallpaper != "none") {
				const picurl = ubus.call("luci.argon_wallpaper", "get_url") ?? {};
				if (picurl?.url) {
					bgUrl = picurl.url;
					return {bgUrl, backgroundType, mimeType};
				}
			}
		}

		let background = fetchMedia("/www" + themeDir, themeDir);
		if ( length(background) > 0 ) {
			let currentBg = background[(rand() % length(background))];
			bgUrl = currentBg.url;
			if (index(videoTypes, " " + currentBg.type + " ") != -1) {
				backgroundType = "Video";
				mimeType = "video/" + currentBg.type;
			}
		}

		return {bgUrl, backgroundType, mimeType};
	}

	const boardinfo = ubus.call("system", "board");
	const hostname = striptags(boardinfo?.hostname ?? '?');
	const themeDir = media + "/background/";
	const bgArry = selectBackground(themeDir);

%}
<!-- Login Page Start -->
<div class="login-page">
	{% if ( bgArry.backgroundType == "Video" ): %}
	<!-- Video Player Start -->
	<div class="video">
		<video autoplay loop muted id="video">
			<source src="{{ bgArry.bgUrl }}" type="{{ bgArry.mimeType }}">
		</video>
	</div>
	<div class="volume-control mute"></div>
	<script>
		document.querySelector(".volume-control").addEventListener("click", function(){
			if(this.classList.contains("mute")){
				this.classList.remove("mute");
				document.getElementById("video").muted = false;
			}else{
				this.classList.add("mute");
				document.getElementById("video").muted = true;
			}
		});
	</script>
	<!-- Video Player End -->
	{% else %}
	<!-- Image Background Start -->
	<div class="main-bg" id="main-bg" style="background-image:url({{ bgArry.bgUrl }})"></div>
	<!-- Image Background End -->
	{% endif %}
	<!-- Login Container Start -->
	<div class="login-container">
		<div class="login-form">
			<!-- Logo Start -->
			<a class="brand" href="/">
				<svg width="50px" height="50px" viewBox="0 0 1067 1067" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:space="preserve" xmlns:serif="http://www.serif.com/" style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2;" class="icon">
					<path id="svg_1" d="M150.417,1.667l765.833,-0c82.083,-0 148.75,66.666 148.75,148.75l0,765.833c0,82.083 -66.667,148.75 -148.75,148.75l-765.833,0c-82.084,0 -148.75,-66.667 -148.75,-148.75l-0,-765.833c-0,-82.084 66.666,-148.75 148.75,-148.75Z" style="fill:var(--icon-color, var(--primary));"/>
					<g id="svg_4">
						<circle id="svg_2" cx="533.333" cy="550" r="76.25" style="fill:#fff;"/>
						<path id="svg_3" d="M533.54,199.344c-194.583,-0 -351.667,157.5 -351.667,351.666c0,134.167 75.417,250.834 185.834,310c28.333,15.417 63.75,-0.833 71.666,-32.083l17.917,-73.333c6.25,-25.834 -4.167,-52.5 -25.417,-68.334c-41.666,-30.833 -68.333,-80.416 -68.333,-136.25c0,-93.75 76.25,-169.583 169.583,-169.583c93.75,-0 169.584,76.25 169.584,169.583c-0,55.834 -26.667,105 -68.334,136.25c-21.25,15.834 -31.666,42.5 -25.416,68.75l18.333,73.334c7.917,31.25 42.917,47.5 71.667,32.083c110.833,-59.167 185.833,-175.833 185.833,-310.417c0.833,-193.75 -157.083,-351.666 -351.25,-351.666Z" style="fill:#fff;fill-rule:nonzero;"/>
					</g>
				</svg>
				<span class="brand-text">{{ hostname }}</span>
			</a>
			<!-- Logo End -->
			<!-- Login Form Start -->
			<form class="form-login" method="post" action="{{ http.getenv("REQUEST_URI") }}">

				{%- if (fuser): %}
				<div class="errorbox">{{ _('Invalid username and/or password! Please try again.') }}</div>
				{% endif -%}

				<div class="input-container">
					<div class="input-group user-icon">
						<input class="cbi-input-user" id="cbi-input-user" type="text" name="luci_username" value="{{ entityencode(duser, true) }}" />
						<label class="border" for="cbi-input-user"></label>
					</div>
					<div class="input-group pass-icon">
						<input class="cbi-input-password" id="cbi-input-password" type="password" name="luci_password" />
						<label class="border" for="cbi-input-password"></label>
					</div>
				</div>
				<div>
					<input type="submit" value="{{ _('Log in') }}" class="cbi-button cbi-button-apply" />
				</div>
			</form>
			<!-- Login Form End -->
			<script type="text/javascript">//<![CDATA[
				var input = document.getElementsByName('luci_password')[0];
				if (input)
					input.focus();
			//]]></script>
{% include("themes/" + theme + "/footer_login") %}
